{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"INTRODUCTION","text":"<p>This is the webpage for the lecture series on Data Analysis and Statistics at the LHC. In these pages, you can find links to the lectures as well as exercises for you to explore a typical data analysis at CMS.  You should be familiar with simple programming in Python, however, the examples should give you enough information to produce the desired output even if you don't know much Python.  </p>"},{"location":"#useful-links","title":"Useful Links","text":"<p>You can find more useful information about the software we will be using below </p> <ul> <li>Docker: Docker is a desktop client for running the container images that we will be using for these exercises.  </li> <li>CMS Open Data: The CMS Collaboration regularly releases open datasets for public use. This link is the CMS Open Data Guide</li> <li>Combine: The Combine tool is the main statistical analysis software package used by the CMS Collaboration. It is based on the ROOT/RooFit software packages, however for these exercises, you do not need to be an expert user of these packages. </li> </ul>"},{"location":"#about-the-author","title":"About the Author","text":"<p>Dr. Nicholas Wardle is a lecturer in Physics at Imperial College London. He is also a member of the CMS Collaboration and his research is focused on statistical methods for data analysis and searches for BSM physics through precision measurements of Higgs boson properties. </p>"},{"location":"day1/","title":"Exercise 1 - Datasets, Selections and Histograms","text":"<p>For the exercises, we will use a simplified version of a CMS analysis to measure the production cross-section of top-quark / anti-top-quark pairs - \\sigma_{tt} - in proton-proton collisions at a centre of mass energy of 13 TeV. We will be using real data from the CMS experiment, taken in 2015 during Run 2 of the LHC. The code is based on the CMS open data workshop linked here, which you can read through if you are interested. </p> <p>The image below is a Feynman diagram of the process we are interested in measuring, namely t\\bar{t}\\rightarrow (bW^{+})(bW^{-})\\rightarrow bq\\bar{q}bl^{-}\\bar{\\nu}_{l} - the lepton+jets final state. </p> <p></p> <p>In our example, we will focus on the case where the lepton l is an electron or muon.  In the CMS detector, these leptons are extremely well measured and are very good for \"triggering\" the events that we are interested in. Looking at the final state, we would also expect to see 4 hadronic jets, two of which will be b-jets, and missing transverse momentum from the neutrino which isn't detected.   </p>"},{"location":"setup/","title":"Setup","text":"<p>To complete these exercises, we will be using two container images, with the software installed for you. In the examples here, we will use docker to run the images. The docker desktop is available for mac, windows and linux so follow the link and download the right installation for your personal laptop. </p> <p>Once you have the docker desktop installed, make sure it is running and get the two containers that we'll need for the exercises using the terminal commands below. Note that the docker desktop has its own terminal if you prefer to use that one. </p>"},{"location":"setup/#python-environment-for-cms-open-data-datasets","title":"Python environment for CMS Open Data datasets","text":"<pre><code>docker run -it --name cms_python -P -p 8888:8888 -v ${HOME}/cms_open_data_python:/code gitlab-registry.cern.ch/cms-cloud/python-vnc:python3.10.5\n</code></pre> <p>Now that you're inside the container, run the following to get all of the necessary scripts and install some additional packages. </p> <pre><code>pip install vector coffea==0.7.21\n</code></pre> <p>To restart the python container, open a terminal and enter </p> <pre><code>docker start -i cms_python\n</code></pre>"},{"location":"setup/#combine-package-for-statistical-analysis","title":"Combine package for statistical analysis","text":"<pre><code>docker run -p 127.0.0.1:8889:8889 --name cms_combine -it gitlab-registry.cern.ch/cms-cloud/combine-standalone:v9.2.1\n</code></pre> <p>To restart the combine container, open a terminal and enter </p> <pre><code>docker start -i cms_combine\n</code></pre>"},{"location":"setup/#jupyter-notebooks","title":"Jupyter Notebooks","text":"<p>As much as possible, we will use Juptyer notebooks to write and run code for these exercises. You can launch JupterLab from either of the two containers by using the following command inside the terminal after starting the container. </p> <pre><code>jupyter lab --ip 0.0.0.0 --port XXXX --no-browser\n</code></pre> <p>where <code>XXXX</code> should be <code>8888</code> for the python container, and <code>8889</code> for the combine container. The output will give you a link that you can paste in your preferred internet browser to open the JupyterLab environment. You should see something like the following for example when launching JupyterLab from the combine container, </p> <p></p> <p>From here, we can open a new terminal, text file or notebook. Since our data structures will be mostly Pandas dataframes, you might want to install the Jupyter spreadsheet editor that allows you to both view and edit CSV files, </p> <pre><code>pip install jupyterlab-spreadsheet-editor\n</code></pre> <p>You can do this in both of the containers but you don't need to install this for the exercises. </p>"}]}